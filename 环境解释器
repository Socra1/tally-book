#!/usr/bin/env python
# 这是一个shebang行，告诉系统这个脚本应该用哪个解释器来执行，这里是使用环境中的python解释器。

"""
Django's command-line utility for administrative tasks.
"""
# 这是一个多行字符串，用作模块的文档字符串，描述了这个脚本的作用，即Django的命令行工具，用于执行管理任务。

import os
import sys
# 导入os和sys模块，os模块用于操作文件系统和环境变量，sys模块用于访问与Python解释器紧密相关的变量和函数。

def main():
    """Run administrative tasks."""
    # 定义一个名为main的函数，用于运行管理任务。

    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bookkeeping.settings')
    # 设置环境变量DJANGO_SETTINGS_MODULE，告诉Django使用哪个设置文件。如果没有设置，则默认为'bookkeeping.settings'。

    try:
        from django.core.management import execute_from_command_line
        # 尝试从Django的core.management模块导入execute_from_command_line函数，该函数用于执行Django管理命令。
    except ImportError as exc:
        # 如果导入失败，捕获ImportError异常。
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
        # 抛出一个新的ImportError，提示用户Django可能未安装，或者没有添加到PYTHONPATH环境变量中，或者忘记激活虚拟环境。
    execute_from_command_line(sys.argv)
    # 调用execute_from_command_line函数，
